
plugins {
	id 'java'
	id 'java-library'
	id 'jacoco'
	id 'checkstyle'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'application'
}

group = 'gwent'

jar {
	enabled = true
}

application {
	mainClassName = 'gwent.api.ApiApplication'
}

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.0.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	testRuntimeOnly "org.junit.platform:junit-platform-commons:1.8.2"
	implementation 'org.springframework:spring-context:6.1.5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}


jacoco {
	toolVersion = "0.8.11"
	reportsDirectory = layout.buildDirectory.dir("reports/jacoco")
}


jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.required = true
		html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
	}
}

jacocoTestCoverageVerification {
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/gwent.api/**/*"
			])
		})
	}

	violationRules {
		rule {
			limit {
				minimum = 0.95
			}
		}
	}
}

jacocoTestReport.dependsOn jacocoTestCoverageVerification

checkstyle {
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

task checkstyle(type: Checkstyle) {
	source 'domain/src'
	include '**/*.java'
	exclude '**/gen/**'
	exclude '**/R.java'
	exclude '**/BuildConfig.java'

	reports {
		xml.required = false
		html.required = true
	}
}